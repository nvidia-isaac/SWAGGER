# Copyright 2025 NVIDIA Corporation
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

name: CI

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

env:
  PYTHONPATH: ${{ github.workspace }}

jobs:
  pre-commit:
    name: Pre-commit Checks
    runs-on: self-hosted
    container:
      image: python:3.12-slim-bullseye
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Cache Python packages
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: precommit-${{ hashFiles('.pre-commit-config.yaml') }}
          restore-keys: |
            precommit-

      - name: Install dependencies and verify Git
        run: |
          set -e
          echo "Updating package lists..."
          apt-get update -y
          echo "Installing git..."
          DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends git
          
          echo "Verifying git installation..."
          if ! command -v git &> /dev/null; then
              echo "ERROR: git command not found after installation attempt!"
              exit 1
          fi
          git --version
          
          echo "Verifying Git repository status..."
          if ! git rev-parse --is-inside-work-tree; then
              echo "ERROR: Not inside a Git work tree, or git command failed to determine it."
              ls -la ${{ github.workspace }} # List files to see if .git is present
              # exit 1 # Optionally exit if not in a git repo is unexpected here
          else
              echo "Successfully inside a Git work tree."
          fi

          echo "Installing Python dependencies (pip, pre-commit)..."
          python3 -m pip install --upgrade pip
          python3 -m pip install pre-commit
          pre-commit --version

      - name: Run pre-commit
        working-directory: ${{ github.workspace }}
        run: |
          echo "Current directory: $(pwd)"
          echo "Listing files in workspace:"
          ls -la
          echo "Running pre-commit..."
          pre-commit run --all-files
    timeout-minutes: 60

  package-check:
    name: Package Check
    runs-on: self-hosted
    needs: pre-commit
    container:
      image: python:3.12-slim-bullseye
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Cache pip packages for Poetry
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: poetry-pip-${{ hashFiles('**/pyproject.toml') }}
          restore-keys: |
            poetry-pip-

      - name: Install dependencies
        run: |
          set -e
          apt-get update && apt-get install -y --no-install-recommends git
          python3 -m pip install --upgrade pip
          python3 -m pip install poetry

      - name: Run Poetry check
        run: poetry check
    timeout-minutes: 15

  unit-tests:
    name: Unit Tests
    needs: package-check
    runs-on: self-hosted
    env:
      CUDA_VISIBLE_DEVICES: all
    container:
      image: nvidia/cuda:12.6.0-runtime-ubuntu22.04
      options: --privileged --gpus all --group-add 998
    steps:
      - uses: actions/checkout@v4

      - name: Cache Python packages
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/pip
            venv/
          key: unit-tests-${{ hashFiles('**/requirements.txt') }}

      - name: Install dependencies
        run: |
          set -e
          apt-get update
          DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends python3-pip python3-venv libgl1-mesa-glx libglib2.0-0
          python3 -m pip install --upgrade pip
          python3 -m pip install -e .
          python3 -m pip install pytest pytest-xdist pytest-cov junitparser

      - name: Run unit tests
        run: |
          mkdir -p test-results
          pytest \
            --junitxml=test-results/unit-tests.xml \
            --cov=. \
            --cov-report=xml:test-results/coverage.xml \
            --cov-report=term-missing \
            tests/unit

      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: unit-test-results
          path: test-results/
          retention-days: 7

  e2e-tests:
    name: End-to-End Tests
    needs: unit-tests
    runs-on: self-hosted
    env:
      CUDA_VISIBLE_DEVICES: all
    container:
      image: nvidia/cuda:12.6.0-runtime-ubuntu22.04
      options: --privileged --gpus all --group-add 998
    steps:
      - uses: actions/checkout@v4

      - name: Install dependencies
        run: |
          set -e
          apt-get update
          DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends python3-pip python3-venv libgl1-mesa-glx libglib2.0-0
          python3 -m pip install --upgrade pip
          python3 -m pip install -e .

      - name: Run E2E tests
        run: |
          mkdir -p test-results
          python3 scripts/generate_graph.py \
            --map-path maps/carter_warehouse_navigation.png \
            --graph-eval.active \
            --perf-eval.active
          python3 scripts/evaluate_graph.py \
            --map-path maps/carter_warehouse_navigation.png \
            --output-dir results \
            --resolution 0.05 \
            --safety-distance 0.3 \
            --occupancy-threshold 127

      - name: Upload artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: e2e-results
          path: |
            test-results/
            results/
            graphs/
          retention-days: 7

      - name: Cleanup
        if: always()
        run: rm -rf results graphs test-results

  docker-build:
    name: Docker Build and Test
    needs: e2e-tests
    runs-on: self-hosted
    env:
      CUDA_VISIBLE_DEVICES: all
      DOCKER_HOST: tcp://docker:2375
      DOCKER_TLS_CERTDIR: ""
    container:
      image: nvidia/cuda:12.6.0-runtime-ubuntu22.04
      options: --privileged --gpus all --group-add 998
    steps:
      - uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Build and test
        run: |
          set -e
          cd docker || { echo "Missing docker directory"; exit 1; }
          docker compose build --no-cache
          docker compose up -d rest-api
          sleep 15  # Wait for service initialization
          docker ps -a
          pytest ../tests/integration/test_api.py -v

      - name: Cleanup
        if: always()
        run: |
          cd docker && docker compose down -v
